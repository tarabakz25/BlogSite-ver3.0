---
import Works from '../components/WorksIntro.astro'
import SkillsBox from '../components/SkillsBox.astro'
import ContactBox from '../components/ContactBox.astro'
import Layout from '../layouts/Layout.astro'
import { Image } from 'astro:assets';

import hitotoxkmc from '../assets/images/LINE_ALBUM_kmcxhitoto_241101_2 4.png'
import max2023 from '../assets/images/max 1.png'
import aboutIcon from '../assets/Vector.svg' 

const title_font = "krok, sans-serif";
const description_font = "Zen Old Mincho";
const program_font = "Anonymous pro";

const color1 = "#EC3A7D"
---

<Layout title="EnterFlow">
    <div class="background"></div>
    <div class="title">
        <div class="container">
            <h1>EnterFlow</h1>
            <p>Portfolio site</p>
        </div>
        <div class="container">
            <h1>EnterFlow<span>とは？</span></h1>
            <h2>"目指せ、最先端のエンターテイナー"をテーマに活動する個人サイトです。</h2>
            <h2>どうぞゆっくりご覧ください。</h2>
        </div>
    </div>
    <div class="about">
        <h1>About</h1>
        <div class="container">
            <Image src={aboutIcon} alt="aboutIcon" />
            <div class="content">
                <h1>Kizuki Aiki</h1>
                <h2>相木 絆煌</h2>
                <p>2008年東京出身,神山まるごと高等専門学校一期生.</p>
                <p>このサイトの製作者. テクノロジー,AI,アウトドアを追及中.</p>
            </div>
        </div>
        <a href="./about">View more...</a>
    </div>
    <div class="works">
        <h1>Works</h1>
        <div class="container">
            <Works worksImg={hitotoxkmc} worksTitle="hitoto x kmc" worksDescription="高専祭大型ワークショップ" />
            <Works worksImg={max2023} worksTitle="AdobeMAX 2023" worksDescription="AdobeMAX2023にて初参加の作品" />
        </div>
    </div> 
    <div class="skills">
        <h1>Skills</h1>
        <div class="container">
            <div class="programming">
                <h2>Programming</h2>
                <div class="container">
                    <div class="languages">
                        <h3>Languages</h3>
                        <SkillsBox skillName="Python" />
                        <SkillsBox skillName="JavaScript" />
                        <SkillsBox skillName="HTML/CSS" />
                        <SkillsBox skillName="C++" />
                        <SkillsBox skillName="swift" />
                    </div>
                    <div class="frameworks">
                        <h3>Frameworks</h3>
                        <SkillsBox skillName="Flask" />
                        <SkillsBox skillName="Node.js" />
                        <SkillsBox skillName="Three.js" />
                        <SkillsBox skillName="astro" />
                        <SkillsBox skillName="swiftUI" />
                    </div>
                </div>
                <div class="container">
                    <div class="tools">
                        <h2>Tools</h2>
                        <SkillsBox skillName="Github" />
                        <SkillsBox skillName="Arc" />
                        <SkillsBox skillName="raycast" />
                        <SkillsBox skillName="Stable Diffusion" />
                    </div>
                    <div class="design">
                        <h2>Design</h2>
                        <SkillsBox skillName="Figma" />
                        <SkillsBox skillName="illustrator" />
                        <SkillsBox skillName="Photoshop" />
                        <SkillsBox skillName="Filmora" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="contact">
        <h2>Contact</h2>
        <div class="container">
            <ContactBox contactName="X" contactLink="https://x.com/kz25_kmc" />
            <ContactBox contactName="Instagram" contactLink="https://www.instagram.com/kizu25_01/" />
            <ContactBox contactName="Github" contactLink="https://github.com/tarabakz25" />
        </div>
    </div>
</Layout>
<style define:vars={{title_font, description_font, color1, program_font}}>
    *, *::before, *::after {
        box-sizing: border-box;
    }

    .background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
    }
    .title .container {
        width: 100%;
        height: calc(100vh);
        display: flex;
        flex-direction: column;
        justify-content: center;
        position: relative;
        padding-left: 50px;
        z-index: 1;
    }
    .title .container h1 {
        color: white;
        text-align: left;
        font-family: var(--title_font), sans-serif;
        font-weight: 400;
        font-style: normal;
        font-size: 80px;
        margin: 0;
        padding-bottom: 20px;
    }
    .title .container p {
        color: white;
        text-align: left;
        font-family: var(--title_font);
        font-weight: 400;
        font-style: normal;
        font-size: 25px;
        margin: 0;
    }
    .title .container h1 {
        color: white;
        text-align: left;
        font-family: var(--title_font);
        font-weight: 400;
        font-style: normal;
        font-size: 80px;
        margin: 0;
        padding-bottom: 20px;
    }
    .title .container h1 span {
        font-family: var(--description_font);
    }
    .title .container h2 {
        color: white;
        text-align: left;
        font-family: var(--description_font);
        font-style: normal;
        font-size: 25px;
    }

    .about {
        width: 100%;
        height: auto;
        display: flex;
        flex-direction: column;
        position: relative;
        z-index: 1;
        opacity: 0.9;
    }
    .about h1 {
        padding: 70px 50px;
        color: white;
        text-align: left;
        font-family: var(--title_font);
        font-weight: 400;
        font-style: normal;
        font-size: 80px;
        margin: 0;
    }
    .about h1::first-letter {
        color: var(--color1);
    }
    .about .container {
        width: 100%;
        height: 400px;
        display: flex;
        align-items: flex-start;
        justify-content: center;
    }
    .about .container img {
        width: 300px;
        height: auto;
        max-width: 100%;
        margin: 20px; 
        flex-shrink: 0;
    }
    .about .container .content {
        color: white;
        font-family: var(--title_font);
        font-weight: 400;
        font-style: normal;
        padding-left: 100px;
    }
    .about .container .content h1 {
        font-size: 96px;
        padding: 0;
    }
    .about .container .content h2 {
        font-size: 32px;
        margin: 0;
        padding-bottom: 60px;
        font-family: var(--description_font);
    }
    .about .container .content p {
        line-height: 1.5;
        margin: 0;
        padding-bottom: 20px;
        font-size: 18px;
        font-family: var(--description_font);
    }
    .about a {
        margin: 40px auto;
        display: inline-block;
        padding: 15px 40px;
        background-color: transparent;
        color: white;
        text-decoration: none;
        border: 2px solid white;
        border-radius: 50px;
        text-align: center;
        font-family: var(--title_font);
        font-size: 1.5rem;
        transition: all 0.3s ease;
    }
    .about a:hover {
        background-color: var(--color1);
        color: #fff;
        border-color: var(--color1);
    }
    .works {
        width: 100%;
        height: auto;
        display: flex;
        flex-direction: column;
        position: relative;
        z-index: 1;
        background-color: #fff;
    }
    .works h1 {
        padding: 70px 0;
        color: black;
        text-align: left;
        font-family: var(--title_font);
        font-weight: 400;
        font-style: normal;
        font-size: 80px;
        margin-left: 50px;
    }
    .works h1::first-letter {
        color: var(--color1);
    }
    .works .container {
        width: 100%;
        height: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        position: relative;
        padding-bottom: 70px;
    }
    .skills {
        width: 100%;
        height: auto;
        display: flex;
        flex-direction: column;
        position: relative;
        z-index: 1;
        background-color: var(--color2);
    }
    .skills h1 {
        padding: 70px 0;
        color: white;
        text-align: left;
        font-family: var(--title_font);
        font-weight: 400;
        font-style: normal;
        font-size: 80px;
        padding-left: 50px;
        letter-spacing: 0.1em;
    }
    .skills h1::first-letter {
        color: var(--color1);
    }
    .skills .container {
        width: 100%;
        height: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        position: relative;
        padding-bottom: 70px;
    }
    .skills .container .programming h2 {
        color: white;
        font-family: var(--program_font);
        font-weight: 400;
        font-size: 48px;
        margin: 0 auto;
        padding: 20px 0;
        text-align: center;
    }

    .skills .container .programming .container {
        width: 100%;
        height: auto;
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        justify-content: space-around;
        position: relative;
        padding-bottom: 70px;
    }

    .skills .container .programming .languages,
    .skills .container .programming .frameworks {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .skills .container .programming .languages h3,
    .skills .container .programming .frameworks h3 {
        color: white;
        font-family: var(--program_font);
        font-weight: 400;
        font-size: 24px;
        margin-bottom: 20px;
    }

    .skills .container .programming .languages .SkillsBox,
    .skills .container .programming .frameworks .SkillsBox {
        border: 1px solid white;
        padding: 10px 20px;
        margin-bottom: 10px;
        width: 200px;
        text-align: center;
        color: white;
        font-family: var(--program_font);
        font-weight: 400;
        font-size: 18px;
    }
    .skills .container .tools,
    .skills .container .design {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 40px;
    }

    .skills .container .tools h2,
    .skills .container .design h2 {
        color: white;
        font-family: var(--program_font);
        font-weight: 400;
        font-size: 48px;
        margin: 0 auto;
        padding-bottom: 20px;
        text-align: center;
    }

    .skills .container .tools .SkillsBox,
    .skills .container .design .SkillsBox {
        border: 1px solid white;
        padding: 10px 20px;
        margin-bottom: 10px;
        width: 200px;
        text-align: center;
        color: white;
        font-family: var(--program_font);
        font-weight: 400;
        font-size: 18px;
    }
    .contact {
        width: 100%;
        height: 500px;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 100px 0;
        background-color: var(--color2);
        opacity: 0.8;
    }

    .contact h2 {
        color: white;
        font-family: var(--program_font);
        font-weight: 400;
        font-size: 48px;
        margin: 0 auto;
        padding-bottom: 20px;
        text-align: center;
    }
    .contact .container {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        position: relative;
    }

    .contact .container .ContactBox {
        border: 1px solid white;
        padding: 10px 20px;
        margin-bottom: 10px;
        width: 200px;
        text-align: center;
        color: white;
        font-family: var(--program_font);
        font-weight: 400;
        font-size: 18px;
    }

    @media (max-width: 768px) {
        .about .container img {
            width: 100%;
            max-width: 300px;
            margin-right: 10px;
        }
        .title h1 {
            font-size: 60px;
        }
        .title p {
            font-size: 20px;
        }
        .about h1 {
            font-size: 60px;
            padding: 50px 0;
        }
    }
</style>
<script type="module">
    import * as THREE from 'https://cdn.jsdelivr.net/npm/three@latest/build/three.module.js';

    let camera, scene, renderer;
    let clock, waveSpeed, waveFrequency, waveAmplitude, geometry;

    // カメラを中心の周囲を回転させるための設定
    let radius = 20;
    let angle = 0;
    let cameraHeight = 10;

    init();
    animate();

    function init() {
        // シーン
        scene = new THREE.Scene();
        scene.background = new THREE.Color(0x000000);

        // カメラ
        camera = new THREE.PerspectiveCamera(
            45,
            window.innerWidth / window.innerHeight,
            0.1,
            1000
        );

        // レンダラー
        renderer = new THREE.WebGLRenderer({ antialias: true });
        renderer.setSize(window.innerWidth, window.innerHeight);

        
        // レンダラー作成後に .background 要素へ追加
        const backgroundElement = document.querySelector('.background');
        if (backgroundElement) {
            backgroundElement.appendChild(renderer.domElement);
        } else {
        console.error('`.background` 要素が見つかりません。');
            document.body.appendChild(renderer.domElement);
        }


        // リサイズイベント
        window.addEventListener("resize", onWindowResize, false);

        // 点群(グリッド)を作成
        createDotGrid();
    }

    function createDotGrid() {
        const N = 30;
        const spacing = 2.0;
        const start = -(N - 1) * spacing / 2;

        const positions = [];
        for (let i = 0; i < N; i++) {
            for (let j = 0; j < N; j++) {
                const x = start + i * spacing;
                const y = 0;
                const z = start + j * spacing;
                positions.push(x, y, z);
            }
        }

        // グローバル変数 geometry に代入するため、const を使わずに代入
        geometry = new THREE.BufferGeometry();
        const vertices = new Float32Array(positions);
        geometry.setAttribute("position", new THREE.BufferAttribute(vertices, 3));

        const material = new THREE.PointsMaterial({
            size: 0.4,
            color: 0xff9900,
            sizeAttenuation: true,
        });

        const points = new THREE.Points(geometry, material);
        scene.add(points);

        // 波の設定
        clock = new THREE.Clock();
        waveSpeed = 1.0;
        waveFrequency = 0.5;
        waveAmplitude = 0.5;
    }

    function onWindowResize() {
        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();
        renderer.setSize(window.innerWidth, window.innerHeight);
    }

    function animate() {
        requestAnimationFrame(animate);

        // 波のアニメーション
        const elapsed = clock.getElapsedTime();
        const positionAttribute = geometry.attributes.position;
        for (let i = 0; i < positionAttribute.count; i++) {
            const x = positionAttribute.getX(i);
            const z = positionAttribute.getZ(i);
            const phase = waveFrequency * ((x + z) - waveSpeed * elapsed);
            const y = Math.sin(phase) * waveAmplitude;
            positionAttribute.setY(i, y);
        }
        positionAttribute.needsUpdate = true;

        // カメラ回転
        angle += 0.001;
        const camX = radius * Math.cos(angle);
        const camZ = radius * Math.sin(angle);
        camera.position.set(camX, cameraHeight, camZ);
        camera.lookAt(0, 0, 0);

        // レンダリング
        renderer.render(scene, camera);
    }
</script>